<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2018-08-07T18:09:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Trying Some Libraries</title>
    <link rel="alternate" href="http://blog.url.com/open-frameworks-and-processing"/>
    <id>http://blog.url.com/open-frameworks-and-processing</id>
    <published>2018-08-07T18:09:00+01:00</published>
    <updated>2018-08-08T00:05:23+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;video src="http://struanfraser.co.uk/posts/2018/video/trying-libraries/torus.mp4" alt="" controls="true" class="full-width" autoplay="false" loop="true"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;My First Attempt at THREEJS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Uh oh, I&amp;rsquo;m spending an awful lot of time with code. With the advent of Framer and now &lt;a href="https://framer.com/x/" target="_blank"&gt;Framer X&lt;/a&gt;, I&amp;rsquo;ve become a bit of an addict for trying out all of the different packages that are floating around the scriptiverse and it&amp;rsquo;s far too tempting to give them a poke. &lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s some of the stuff I&amp;rsquo;ve been playing with: –&lt;/p&gt;

&lt;h2&gt; P5.JS&lt;/h2&gt;

&lt;video src="http://struanfraser.co.uk/posts/2018/video/trying-libraries/do-it-now.mp4" alt="" controls="true" class="full-width"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;Made with p5.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The Web Audio API&amp;rsquo;s capabilities have blown me away as you can do all kinds of witchcraft when combined with P5.js. This is a quick prototype I built with the &lt;a href="http://https://p5js.org/reference/#/libraries/p5.sound"&gt;p5.sound&lt;/a&gt; library which I&amp;rsquo;ve only just scratched the surface of. This uses mouse input to control a low pass and amplitude if I remember correctly. I&amp;rsquo;d love to try hooking this up to an Arduino to create some cool performative artifacts.&lt;/p&gt;

&lt;h3&gt;Sketches for Fountains&lt;/h3&gt;

&lt;p&gt;After giving a friend a little support for their final year project, they offered to let me try out a processing sketch on the fountains at Central Saint Martins –&lt;/p&gt;

&lt;video src="http://struanfraser.co.uk/posts/2018/video/trying-libraries/fountain-sketch.mp4" alt="" controls="true"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;You can see a live demo of the &lt;a href="http://struanfraser.co.uk/fountain-sketch"&gt;Fountain Sketch here&lt;/a&gt;. Made with p5.js.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The left hand side shows the height of the wave: the whiter it is, the higher the wave. The right hand side shows the colour projected through the jet. Unfortunately we ran out of time on the day but I did get this photo of a trial run &lt;i&gt;almost&lt;/i&gt; working correctly – 
&lt;img src="http://struanfraser.co.uk/posts/2018/images/trying-libraries/fountain.jpg" alt=""&gt;&lt;span class="caption"&gt;A Processing Sketch in a Fountain&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt; P5 with 3D&lt;/h3&gt;

&lt;video src="http://struanfraser.co.uk/posts/2018/video/trying-libraries/spinny-ball.mp4" alt="" controls="true" class="full-width"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;First foray into 3D using p5.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Um, I&amp;rsquo;m not sure there&amp;rsquo;s much to say about this other than I have a lot to learn about 3D. I had a go at THREEJS at the start of this post too but it&amp;rsquo;s just a whole new set of skills and ideas to get my head around&amp;hellip; I&amp;rsquo;ll keep at it.&lt;/p&gt;

&lt;h2&gt;Open Frameworks&lt;/h2&gt;

&lt;p&gt;Over the past couple of years, I think I&amp;rsquo;ve finally learned how to wield Twitter effectively and it&amp;rsquo;s introduced me to swathes of new artists&amp;rsquo; and coders&amp;rsquo; work. I found a video of Zach Lieberman talking at the AIGA design conference last year and I found the ease with which he was able to create shapes in code and talk about his journey with creative code inspiring. Seeing that talk made me want to try out Open Frameworks. The following is a result of that exploration –&lt;/p&gt;

&lt;video src="http://struanfraser.co.uk/posts/2018/video/trying-libraries/square-grid-swoop-lieberman.mp4" alt="" controls="true" class="full-width"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;An Open Processing Sketch – inspired by/stolen from – Zach Lieberman&amp;rsquo;s AIGA talk.&lt;/span&gt;&lt;/p&gt;

&lt;video src="http://struanfraser.co.uk/posts/2018/video/trying-libraries/lines-and-swoop.mp4" alt="" controls="true" class="full-width"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;A progression of that initial idea.&lt;/span&gt;&lt;/p&gt;

&lt;video src="http://struanfraser.co.uk/posts/2018/video/trying-libraries/wacky-lines.mp4" alt="" controls="true" class="full-width"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;Learning about the importance of using time as this is HECTIC.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Quickly I&amp;rsquo;m realising I need to become a master of time and colour. Understanding how to use time in a sketch is so important and quite a new way of thinking compared to the programming environments I&amp;rsquo;m familiar with.&lt;/p&gt;

&lt;p&gt;Colour is also really difficult as you&amp;rsquo;re using time to change the properties of colour. Slowly, mastery of the sine wave is emerging as a necessary skill to create a well composed sketch: it allows for a much more naturalistic shift in colour and space.&lt;/p&gt;

&lt;video src="http://struanfraser.co.uk/posts/2018/video/trying-libraries/chromatic-aberration-webcam.mp4" alt="" controls="true" class="full-width"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;Trippy camera stuff made with Open Frameworks.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/struanfraser/status/956183356160475136"&gt;I saw this on tumblr&lt;/a&gt; some time ago but was never able to track down another source. I&amp;rsquo;m a really big fan of people&amp;rsquo;s interpretations of chromatic aberration and I wanted to have a go at creating something interesting.&lt;/p&gt;

&lt;p&gt;And finally here&amp;rsquo;s the talk that kicked off the Open Frameworks intrigue –&lt;/p&gt;

&lt;iframe width="100%" height="400" src="https://www.youtube-nocookie.com/embed/bmztlO9_Wvo?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>TV &amp; Framer</title>
    <link rel="alternate" href="http://blog.url.com/tv-and-framer"/>
    <id>http://blog.url.com/tv-and-framer</id>
    <published>2018-04-22T00:00:00+01:00</published>
    <updated>2018-07-03T23:16:58+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="http://struanfraser.co.uk/posts/2018/images/keyboard-input.gif" alt="A light blue gradient background with the words 'hello world', in white, appearing to type themselves."&gt;&lt;/p&gt;

&lt;h2&gt;Prototyping for TV&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;Information about user research and prototyping for TV is lacking compared to mobile &amp;amp; web. Most of it is transferrable but – at YouView – we&amp;rsquo;ve encountered problems where we&amp;rsquo;ve had to innovate in order to achieve what&amp;rsquo;s standard practice on other platforms. One of the biggest barriers has been prototyping because we use infrared input and there aren&amp;rsquo;t any obvious, pre-packaged solutions for prototyping with a remote control.&lt;/p&gt;

&lt;p&gt;It feels like we&amp;rsquo;ve tried every prototyping tool under the sun &lt;em&gt;(R.I.P. Pixate ⚰️)&lt;/em&gt;. Using Axure we&amp;rsquo;d tied ourselves into the deepest, most convoluted conditional logic  that it was no longer feasible to return to a project. &lt;/p&gt;

&lt;p&gt;A screenshot of one of my colleague&amp;rsquo;s more complicated prototypes –
&lt;img src="http://struanfraser.co.uk/posts/2018/images/axure-chaos.png" alt="Screenshot of Axure with hundreds of conditional statements in the right hand panel." class="no-shadow" loop="true" style="margin-bottom:0;"&gt;
&lt;span class="caption" style="margin-top: -0.2em;"&gt;Axure&amp;rsquo;s conditional chaos. And that&amp;rsquo;s a fraction of it.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Axure was good in that it was one of the few prototyping tools that allowed for keyboard input. We&amp;rsquo;d discovered that you could buy a cheap infrared receiver called a &lt;a href="http://www.flirc.tv"&gt;FLIRC&lt;/a&gt; and that it could be used to convert infrared input into keyboard input. Perfect.&lt;/p&gt;

&lt;p&gt;We got by like this for some time and when we needed more intricate prototypes, we would hire contractors who weren&amp;rsquo;t from a design background. That made communication difficult.&lt;/p&gt;

&lt;h2&gt;Enter Framer.&lt;/h2&gt;

&lt;p&gt;Framer was introduced to me by a colleague who described it as,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;pretty much javascript. If you can use that you might as well work on the set top box.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That was fairly intimidating but equipped with some decaying programming skills from school and a determination to stop using Axure (see above), I&amp;rsquo;d decided to stick with it.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;d stumbled upon &lt;a href="http://examples.framerjs.com/#event-keyboard-shortcuts.framer"&gt;this nifty little example&lt;/a&gt; which seemed to perfectly meet our needs. Unfortunately the syntax looked pretty dense compared to the mobile prototypes and it became fairly clear that Framer wasn&amp;rsquo;t designed for TV but we persevered. &lt;/p&gt;

&lt;video src="http://struanfraser.co.uk/posts/2018/video/flirc.mp4" alt="Struan uses an infrared remote control to interact with a Framer prototype of YouView's TV Guide" controls="true" class="full-width" loop="true"&gt;&lt;/video&gt;

&lt;p&gt;&lt;span class="caption"&gt;Using FLIRC with a YouView TV Guide prototype&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;A year of learning later and we&amp;rsquo;re finding it&amp;rsquo;s quite hard to get an entire design team – with little knowledge of object oriented programming – to use a tool to do something for which it wasn&amp;rsquo;t designed. Keyboard input creates a whole host of problems, such as repeating input and complicated syntax, so we came up with a &lt;em&gt;(hopefully)&lt;/em&gt; simpler solution than Framer had previously offered.&lt;/p&gt;

&lt;blockquote class="twitter-tweet tw-align-center" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Using a remote control with framer 😎 by &lt;a href="https://twitter.com/struanfraser?ref_src=twsrc%5Etfw"&gt;@struanfraser&lt;/a&gt; uhuuuu I want to try that too &lt;a href="https://twitter.com/hashtag/framerlondon?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#framerlondon&lt;/a&gt; &lt;a href="https://t.co/alxncDo4Mq"&gt;pic.twitter.com/alxncDo4Mq&lt;/a&gt;&lt;/p&gt;&amp;mdash; Marie Schweiz (@ma_rylou) &lt;a href="https://twitter.com/ma_rylou/status/988867630500057091?ref_src=twsrc%5Etfw"&gt;April 24, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;h2&gt;Keyboard Input for Framer&lt;/h2&gt;

&lt;p&gt;After many prototypes I felt like I&amp;rsquo;d come to a conclusion about how I wanted to use keyboard input in a way that was relatively similar to Framer&amp;rsquo;s existing syntax. It still requires a knowledge of functions which I think was a bit of a stumbling block. That said, you only have to write one line of code for each key which simplifies things considerably –&lt;/p&gt;

&lt;h3&gt;The Old Way&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&lt;table class="rouge-table"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="rouge-gutter gl"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class="rouge-code"&gt;&lt;pre&gt;enter = 13
document.addEventListener 'keydown', (event) -&amp;gt;
    keyCode = event.which
    eventHandler(keyCode)
    event.preventDefault()
eventHandler = Utils.throttle 0.3, (keyCode) -&amp;gt;
    switch keyCode
        when enter
            doSomething()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;The New Way&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&lt;table class="rouge-table"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="rouge-gutter gl"&gt;&lt;pre class="lineno"&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class="rouge-code"&gt;&lt;pre&gt;keyboard.onKey(keyboard.enter, doSomething, 0.3)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;ve written a more comprehensive guide on how to use the module on Github so if the module sounds like something you&amp;rsquo;d be interested in, take a look –&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Skinny-Malinky/Keyboard-Input-for-Framer"&gt;&lt;img src="http://struanfraser.co.uk/posts/2018/images/keyboard-input.gif" alt="A light blue gradient background with the words 'hello world', in white, appearing to type themselves."&gt;
&lt;span class = "caption"&gt;Get the Module&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
